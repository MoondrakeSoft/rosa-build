script type="text/ng-template" id="build_list_filters.html"
  .modal-header
    | Bleh
  .modal-body
    .row
      - html_options = { class: 'form-control' }
      = form_for :filter, html: { id: 'monitoring_filter' }, authenticity_token: false do |f|
        .col-xl-12.col-md-4
          h4= t 'layout.build_lists.ownership.header'
          .btn-group.btn-group-justified
            - ['owned', (@project ? nil : 'related'), 'everything'].compact.each do |ownership|
              .btn-group
                label.btn.btn-default [ ng-model      = 'params.ownership'
                                        uib-btn-radio = "'#{ownership}'" ]
                  = t "layout.build_lists.ownership.#{ownership}"

          h4= t 'number_rows'
          .btn-group.btn-group-justified
            -BuildList::Filter::PER_PAGE.each do |num|
              .btn-group
                label.btn.btn-default[ ng-model = 'params.per_page' uib-btn-radio = "'#{num}'" ]= num

          h4= t 'activerecord.attributes.build_list.status'
          = f.select :status, BuildList::STATUSES.collect{ |status| [BuildList.human_status(status), status] },
                     { include_blank: true },
                     html_options.merge(id: 'status', 'ng-model' => 'params.status')

        .col-xl-12.col-md-4
          h4= t 'activerecord.models.platform'
          = f.select :save_to_platform_id, filter_by_save_to_platform,
                     { include_blank: true },
                     html_options.merge(id: 'platform', 'ng-model' => 'params.save_to_platform_id')

          h4= t 'activerecord.attributes.build_list.arch'
          = f.select :arch_id, Arch.recent.collect{ |arch| [arch.name, arch.id] }, { include_blank: true },
                     html_options.merge(id: 'architecture', 'ng-model' => 'params.arch_id')

          h4= t 'activerecord.models.mass_build'
          = f.select :mass_build_id, mass_build_options, { include_blank: true },
                     html_options.merge(id: 'mass_build', 'ng-model' => 'params.mass_build_id')

        .col-xl-12.col-md-4
          .row ng-controller = 'DatePickerController as datePickerCtrl'
            -[:updated_at_start, :updated_at_end].each do |attr|
              h4= t attr == :updated_at_start ? '_on' : 'until'
              = f.text_field attr, size: 10, class: 'form-control',
                'uib-datepicker-popup' => '{{datePickerCtrl.format}}',
                'ng-model' => "$scope.$parent.params.#{attr}",
                'is-open' => "datePickerCtrl.#{attr}_opened",
                min: 'datePickerCtrl.minDate',
                max: 'datePickerCtrl.maxDate',
                'datepicker-options' => 'datePickerCtrl.dateOptions',
                'date-disabled' => "datePickerCtrl.disabled(date, mode)",
                'ng-click' => "datePickerCtrl.open_#{attr}($event)"

  .modal-footer
    button.btn.btn-primary type = 'button' ng-click = 'apply()'
      i.fa.fa-search
      = t('layout.search.header')
    button.btn.btn-primary[ type = 'button' ng-click = 'reset()' ]= t('reset')
